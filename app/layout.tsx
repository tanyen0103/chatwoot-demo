import Header from "components/header/Header";
import localFont from "next/font/local";
import "./globals.css";
import Footer from "components/footer/Footer";

const gilroy = localFont({
  display: "swap",
  src: [
    {path: "../public/fonts/SVN-Gilroy Xlight Italic.otf", weight: '100', style: 'italic'},
    {path: "../public/fonts/SVN-Gilroy Xlight.otf", weight: '100', style: 'normal'},
    {path: "../public/fonts/SVN-Gilroy Light Italic.otf", weight: '200', style: 'italic'},
    {path: "../public/fonts/SVN-Gilroy Light.otf", weight: '200', style: 'normal'},
    {path: "../public/fonts/SVN-Gilroy Thin Italic.otf", weight: '300', style: 'italic'},
    {path: "../public/fonts/SVN-Gilroy Thin.otf", weight: '300', style: 'normal'},
    {path: "../public/fonts/SVN-Gilroy Italic.otf", weight: '400', style: 'italic'},
    {path: "../public/fonts/SVN-Gilroy Regular.otf", weight: '400', style: 'normal'},
    {path: "../public/fonts/SVN-Gilroy Medium Italic.otf", weight: '500', style: 'italic'},
    {path: "../public/fonts/SVN-Gilroy Medium.otf", weight: '500', style: 'normal'},
    {path: "../public/fonts/SVN-Gilroy SemiBold Italic.otf", weight: '600', style: 'italic'},
    {path: "../public/fonts/SVN-Gilroy SemiBold.otf", weight: '600', style: 'normal'},
    {path: "../public/fonts/SVN-Gilroy Bold Italic.otf", weight: '700', style: 'italic'},
    {path: "../public/fonts/SVN-Gilroy Bold.otf", weight: '700', style: 'normal'},
    {path: "../public/fonts/SVN-Gilroy XBold Italic.otf", weight: '800', style: 'italic'},
    {path: "../public/fonts/SVN-Gilroy XBold.otf", weight: '800', style: 'normal'},
    {path: "../public/fonts/SVN-Gilroy Heavy Italic.otf", weight: '900', style: 'italic'},
    {path: "../public/fonts/SVN-Gilroy Heavy.otf", weight: '900', style: 'normal'},
    {path: "../public/fonts/SVN-Gilroy Black Italic.otf", weight: '1000', style: 'italic'},
    {path: "../public/fonts/SVN-Gilroy Black.otf", weight: '1000'},
  ],
  variable: "--font-gilroy",
});

export const metadata = {
  title:
    "Chatwoot: Customer engagement platform. An open-source, self-hosted alternative to Intercom, Zendesk",
  description: "Generated by create next app",
  icons: {
    icon: [{ url: "/logo.png", type: "image/png" }],
  },
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en" className={`${gilroy.variable}`}>
      <body>
        <Header />
        {children}
        <Footer />
      </body>
    </html>
  );
}
